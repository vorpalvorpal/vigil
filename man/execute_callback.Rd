% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callback_handling.R
\name{execute_callback}
\alias{execute_callback}
\title{Execute a callback with enhanced output capture}
\usage{
execute_callback(db_path, event_id)
}
\arguments{
\item{db_path}{Path to the SQLite database containing the watcher configuration}

\item{event_id}{Integer ID of the event that triggered the callback}
}
\description{
This function executes a callback stored in a watcher's database and captures
various types of output including printed text, messages, warnings, errors,
return values, and plots. All outputs are stored back in the database.
}
\details{
The function retrieves the callback content from the database's config table
and executes it in an environment where the event data is available as the
'event' variable. Different types of output are captured:
\itemize{
\item Source code (stored in callback_source)
\item Printed output (stored in callback_text)
\item Messages (stored in callback_messages)
\item Warnings (stored in callback_warnings)
\item Errors (stored in callback_errors)
\item Return values (serialized and stored in callback_values)
\item Plots (serialized and stored in callback_plots)
}

Return values and plots are serialized using the qs package and encoded
using base85 encoding before storage.
}
