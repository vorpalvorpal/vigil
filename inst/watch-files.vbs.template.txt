Option Explicit

' Configuration
Const WATCH_MODE = "{{WATCH_MODE}}"     ' "continuous", "single" or "persistent"
Const CHANGE_TYPE = "{{CHANGE_TYPE}}"    ' "any", "created", "modified", "deleted"
Const NO_CLEANUP = "{{NO_CLEANUP}}"      ' "true" or "false"

' Create file system objects
Dim objFSO, objShell, watchFolder
Set objFSO = CreateObject("Scripting.FileSystemObject")
Set objShell = WScript.CreateObject("WScript.Shell")

' Write process ID file
With CreateObject("ADODB.Stream")
    .Open
    .Type = 2 ' Text
    .Charset = "utf-8"
    .WriteText WScript.GetObject("winmgmts:").Get("Win32_Process.Handle='" & _
               CreateObject("WScript.Shell").Exec("cmd /c echo %%" & "pid%%").StdOut.ReadAll & "'").ProcessId & _
               " {{WATCHER_ID}}"
    .SaveToFile "{{VIGIL_DIR}}\process_{{WATCHER_ID}}.txt", 2
    .Close
End With

' Cleanup function
Sub Cleanup(exitScript)
    On Error Resume Next
    Dim processFile
    processFile = "{{VIGIL_DIR}}\process_{{WATCHER_ID}}.txt"

    If objFSO.FileExists(processFile) Then objFSO.DeleteFile(processFile)

    ' Only cleanup event files if NO_CLEANUP is false
    If NO_CLEANUP <> "true" Then
        Dim eventFile
        For Each eventFile in objFSO.GetFolder("{{VIGIL_DIR}}").Files
            If Left(eventFile.Name, 6) = "event_" And _
               InStr(eventFile.Name, "{{WATCHER_ID}}") > 0 Then
                objFSO.DeleteFile eventFile.Path
            End If
        Next
    End If

    If exitScript Then WScript.Quit
End Sub

' Set up cleanup on script termination
Sub OnTerminate
    Cleanup True
End Sub

' Handle file event and optionally exit
Sub HandleFileEvent(eventType, file)
    On Error Resume Next

    ' Only process events that match our criteria
    If CHANGE_TYPE <> "any" And eventType <> CHANGE_TYPE Then
        Exit Sub
    End If

    ' Write event to JSON file
    Dim eventFile
    eventFile = "{{VIGIL_DIR}}\event_{{WATCHER_ID}}_" & Replace(Now, ":", "") & ".json"

    With CreateObject("ADODB.Stream")
        .Open
        .Type = 2 ' Text
        .Charset = "utf-8"
        .WriteText "{""type"":""" & eventType & """,""path"":""" & _
                   Replace(file, "\", "\\") & """,""timestamp"":""" & Now & """}"
        .SaveToFile eventFile, 2
        .Close
    End With

    ' If in single event mode, exit after processing
    If WATCH_MODE = "single" Then
        Cleanup True
    End If
End Sub

Sub OnCreated(obj, ev)
    HandleFileEvent "created", ev.FullPath
End Sub

Sub OnChanged(obj, ev)
    HandleFileEvent "modified", ev.FullPath
End Sub

Sub OnDeleted(obj, ev)
    HandleFileEvent "deleted", ev.FullPath
End Sub

' Setup FileSystemWatcher
Set watchFolder = CreateObject("System.IO.FileSystemWatcher")
With watchFolder
    .Path = "{{WATCH_PATH}}"
    .Filter = "{{PATTERN}}"
    .NotifyFilter = 17 ' LastWrite + FileName + DirectoryName
    .IncludeSubdirectories = {{RECURSIVE}}
    .EnableRaisingEvents = True
End With

' Connect events
watchFolder.OnCreated = GetRef("OnCreated")
watchFolder.OnChanged = GetRef("OnChanged")
watchFolder.OnDeleted = GetRef("OnDeleted")

' Keep script running but check for termination
' For persistent mode, we don't check stdin
Do While True
    WScript.Sleep 1000

    If WATCH_MODE <> "persistent" Then
        ' Check if parent R process exists
        On Error Resume Next
        If WScript.StdIn.AtEndOfStream Then
            Cleanup True
        End If
    End If
Loop
